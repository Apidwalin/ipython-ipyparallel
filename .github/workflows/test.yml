name: Test

on:
  pull_request:
  push:

env:
  # UTF-8 content may be interpreted as ascii and causes errors without this.
  LANG: C.UTF-8

jobs:
  test:
    runs-on: ${{ matrix.runs_on || 'ubuntu-20.04' }}
    timeout-minutes: 15

    strategy:
      # Keep running even if one variation of the job fail
      fail-fast: false
      matrix:
        include:
          - python: "3.9"
            cluster_type: ssh
          - python: "3.8"
            cluster_type: mpi
          - python: "3.7"
            cluster_type: slurm
          - python: "3.6"
            tornado: "5.1.1"
          - python: "3.7"
            controller_ip: "*"
          - python: "3.8"
            runs_on: windows-2019
          - python: "3.9"
            runs_on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda environment
        uses: actions/cache@v2
        with:
          path: |
            ~/conda
          key: conda

      - name: Set environment variables
        if: matrix.controller_ip
        run: |
          echo "IPP_CONTROLLER_IP=${{ matrix.controller_ip }}" >> $GITHUB_ENV

      - name: Set up docker-compose for ssh launcher
        if: ${{ matrix.cluster_type == 'ssh' }}
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          cd ci/ssh
          docker-compose up -d --build

      - name: Set up slurm
        if: ${{ matrix.cluster_type == 'slurm' }}
        run: |
          sudo rm -rf /var/lib/apt/lists
          sudo apt-get update && sudo apt-get -f -y install && sudo apt-get -y install slurm-wlm
          sudo cp ci/slurm/slurm.conf /etc/slurm-llnl/
          sudo mkdir /var/spool/slurmctl
          sudo mkdir /var/spool/slurmd
          sudo service munge start
          sudo service slurmd start
          sudo service slurmctld start

      - name: Install Python (conda) ${{ matrix.python }}
        if: ${{ matrix.cluster_type == 'mpi' }}
        run: |
          export MAMBA_ROOT_PREFIX=$HOME/conda
          test -d $MAMBA_ROOT_PREFIX || mkdir $MAMBA_ROOT_PREFIX
          wget -qO- https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
          eval "$(./bin/micromamba shell hook -s posix)"
          micromamba activate
          micromamba install -y -c conda-forge mpich mpi4py python=${{ matrix.python }}
          echo "PATH=$MAMBA_ROOT_PREFIX/bin:$PATH" >> $GITHUB_ENV

      - name: Install Python ${{ matrix.python }}
        if: ${{ matrix.cluster_type != 'mpi' }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install --pre --upgrade .[test] distributed joblib codecov
          pip install --only-binary :all: matplotlib || echo "no matplotlib"

      - name: Install pinned tornado
        if: matrix.tornado
        run: |
          pip install tornado==${{ matrix.tornado }}

      - name: Show environment
        run: pip freeze

      - name: Run ${{ matrix.cluster_type }} tests
        if: ${{ matrix.cluster_type }}
        run: |
          pytest -ra -v --maxfail=2 --color=yes --cov=ipyparallel ipyparallel/tests/test_${{ matrix.cluster_type }}.py

      - name: Run tests
        if: ${{ ! matrix.cluster_type }}
        # FIXME: --color=yes explicitly set because:
        #        https://github.com/actions/runner/issues/241
        run: |
          pytest -ra -v --maxfail=3 --color=yes --cov=ipyparallel ipyparallel/tests

      - name: Submit codecov report
        run: |
          codecov

      - name: Report on slurm
        if: ${{ matrix.cluster_type == 'slurm' && failure() }}
        run: |
          set -x
          slurmd -C
          ls -l
          squeue
          sinfo
          scontrol show node=localhost
          sudo cat /var/log/slurm-llnl/*
